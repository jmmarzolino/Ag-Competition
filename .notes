# from THE END OF 002b_derived_traits_and_QC.R
##################################    START
##################################    START

ggplot(df3) + geom_histogram(aes(FECUNDITY))

 df3 %>% select(c(Exp_year, Replicate, FECUNDITY)) %>% group_by(Exp_year) %>% summarise(across(-c(Replicate), \(x) median(x, na.rm=T) - (2* IQR(x, na.rm=T))))
df3 %>% select(c(Exp_year, Replicate, FECUNDITY)) %>% group_by(Exp_year) %>% summarise(across(-c(Replicate), \(x) median(x, na.rm=T) + (2* IQR(x, na.rm=T))))

#problem w fecundity....
#values over 600...
df3[which(df3$FECUNDITY > 400),] 


####################
# check for large differences between replicates
# specifically for traits with low replicate-correlation values: 100-seed weight & total mass

#### total seed mass / yield
# calculate total mass relative to plant # and THEN checking range of value differences
df_tm <- df2 %>% select(c(Genotype, Exp_year, Replicate, Germination, TOTAL_MASS)) %>% 
  mutate("mass_per_plant"=TOTAL_MASS/Germination) %>% select(-c(Germination, TOTAL_MASS)) 


up_bnds <- df_tm %>% 
  group_by(Exp_year) %>% 
  summarise(across(-c(Genotype, Replicate), \(x) median(x, na.rm=T) + (2* IQR(x, na.rm=T))))
lw_bnds <- df_tm %>% 
  group_by(Exp_year) %>% 
  summarise(across(-c(Genotype, Replicate), \(x) median(x, na.rm=T) - (2* IQR(x, na.rm=T))))


for(year in c(2022,2023)) {
  x <- df_tm %>% filter(Exp_year == year)
  trait <- 4
  match <- colnames(x)[trait]

  # find the upper and lower bounds for trait & year
  upp <- up_bnds %>% filter(Exp_year==year) %>% select(all_of(match))
  dwnn <- lw_bnds %>% filter(Exp_year==year) %>% select(all_of(match))

  # plot trait distribution
  g1 <- ggplot(x) + geom_histogram(aes(unlist(x[,trait]))) + 
    geom_vline(aes(xintercept=upp[[1]]), color = "#F31919") + 
    geom_vline(aes(xintercept=dwnn[[1]]), color = "#F31919") + 
    theme_bw() +
    labs(title=match, x=match, subtitle=year) 
    
    print(g1)


  # filter outlier values
  # just replace the outlier value with NA
  x[which(x[,trait] > upp[[1]]), trait] <- NA
  x[which(x[,trait] < dwnn[[1]]), trait] <- NA

  g2 <- ggplot(x) + geom_histogram(aes(unlist(x[,trait]))) + 
    geom_vline(aes(xintercept=upp[[1]]), color = "#F31919") + 
    geom_vline(aes(xintercept=dwnn[[1]]), color = "#F31919") + 
    theme_bw() +
    labs(title=match, x=match, subtitle=year) 

  print(g2)

  # save the year's traits
  assign(paste0("ayear_", year), x)
  }


# re-join data from the two years of experiment
join_tm <- full_join(ayear_2022, ayear_2023)
  
join_tm %>% 
  pivot_wider(names_from=Replicate, names_prefix = "REP_", values_from='mass_per_plant') %>% group_by(Exp_year) %>% summarise('correlation'=cor(REP_1, REP_2, use="pairwise.complete.obs"))




## filter large differences
df_tm2$diff <- df_tm2$REP_1 - df_tm2$REP_2
ggplot(df_tm2) +
  geom_histogram(aes(abs(diff))) +
  facet_wrap(~Exp_year, nrow=2)
# is more than 15s of grams of difference in mass per plant reasonable?
# I'm raising it from 10g, and lowering it from 20-23g
median(df_tm2$diff, na.rm=T) + (2* IQR(df_tm2$diff, na.rm=T))
# calculated outlier limit is ~14, so I'll set it to 15g difference which also feels reflective of 
up_bnds <- df_tm2 %>%
  group_by(Exp_year) %>%
  summarise(across(diff, \(x) median(x, na.rm=T) + (2* IQR(x, na.rm=T))))

  upp <- up_bnds %>% filter(Exp_year==year) %>% select(all_of(match))
  dwnn <- lw_bnds %>% filter(Exp_year==year) %>% select(all_of(match))



df_tm[which(df_tm$Exp_year==2022 & abs(df_tm$diff) > 15),]
df_tm[which(df_tm$Exp_year==2023 & abs(df_tm$diff) > 15),] 
# and that'll only remove 1 & 4 values (respective to year)




ttt <- round((nrow(df_tm[which(abs(df_tm$diff) > 10),])/nrow(df_tm))*100)

print("removing samples with more than 10g seed-yield per-plant difference between replicates")
print(paste0("removes ", (ttt), " percent of remaining samples"))


df_tm_filt <- df_tm %>% filter(abs(diff) < 10)
ggplot(df_tm_filt) +
  geom_histogram(aes(diff)) +
  facet_wrap(~Exp_year, nrow=2)
df_tm_filt %>% group_by(Exp_year) %>% summarise('correlation'=cor(REP_1, REP_2, use="pairwise.complete.obs"))

## how do you combine this filter...back into the rest of the data frame
# if you filtered the huge differences, it was a combination of genotype & year, not replicate number
kept <- df_tm_filt %>% select(c(Genotype, Exp_year))
# now...filter joined...
smth <- right_join(df2, kept, by=c("Genotype", "Exp_year"))
# that's a list of...the genotype-year combos to keep...
# but for the other genotype-year combos in df2... you just need to remove the total mass measurements for it

df2[which(Genotype %in% geno_list & Exp_year == 2022), which(colnames(df2=="TOTAL_MASS"))] <- NA





#### 100-seed mass
df_sw <- df2 %>% select(c(Genotype, Exp_year, Replicate, SEED_WEIGHT_100))

df_sw <- df_sw %>% 
  pivot_wider(names_from=Replicate, names_prefix = "REP_", values_from='SEED_WEIGHT_100')
df_sw %>% group_by(Exp_year) %>% summarise('correlation'=cor(REP_1, REP_2, use="pairwise.complete.obs"))

# calculate difference between R1 and R2
df_sw$rep_diff <- df_sw$REP_1 - df_sw$REP_2

# plot the distribution of those differences
ggplot(df_sw) +
  geom_histogram(aes(abs(rep_diff))) +
  facet_wrap(~Exp_year, nrow=2)

# more than 2 g difference between replicates ...is that reasonable?
# 2 g per 100 seeds...
# I don't think I'll filter that any further

##################################    END
##################################    END
##################################    END


cd /rhome/jmarz001/bigdata/Ag-Competition/data
cut -d\  -f1 Parents_pheno.txt | tail -n+2 > Parent_KLs.txt

# the lowest color value is too light, so adjust the color scale down one
#display.brewer.pal(6, "Blues")
#adjusted_blues <- brewer.pal(7, "Blues")[3:7]


#scale_color_npg()
#scale_color_bmj
#scale_color_jco
#scale_color_igv
#scale_color_frontiers


# when using boxplot & jitter ....      
# some points may be doubled b/c they're plotted as part of jitter & boxplot-outliers
# you can color boxplot outliers, or not include them (outliers=T/F, outlier.color/shape/size/alpha...)





 # {plink} --clump has two main applications:
#    To report the top X single SNP results from a genome-wide scan in terms of a smaller number of clumps of correlated SNPs (i.e. to assess how many independent loci are associated, for example)
#    To provide a quick way to combine sets of results from two or more studies, when the studies might also be genotyped on different marker sets

#--clump loads the named PLINK-format association report(s) (text files with a header line, a column containing variant IDs, and another column containing p-values) and groups results into LD-based clumps, writing a new report to plink2.clumps[.zst]. Multiple filenames can be separated by spaces or commas.

 #By default, PLINK scans these files and extracts fields with the headers SNP and P

 
 #/rhome/dkoenig/bigdata/BARLEY_CCII_PROGENY_RAD/DATA/OUTPUT/TMP/Barley_Morex_V2_TE_annotation.gff
 #format.gt.pos




### Create function to unlist and convert vectors to numeric
unlist_numeric <- function(x){
  unlist(x) %>%
    as.numeric(x)
}

### Replace negative TW with NA, unlist all vectors and convert them to numeric, fill in missing generation values
FT_FITNESS <- FT_FITNESS %>% relocate(Exp_year, .after = replicate)
FT_FITNESS[5:14] <- lapply(FT_FITNESS[5:14], unlist_numeric)
FT_FITNESS[which(FT_FITNESS$total_seed_mass_g < 0), (7:ncol(FT_FITNESS))] <- NA

FT_FITNESS$Generation <- gsub("^1_.*", 18, FT_FITNESS$Genotypes)
FT_FITNESS$Generation <- gsub("^2_.*", 28, FT_FITNESS$Generation)
FT_FITNESS$Generation <- gsub("^3_.*", 50, FT_FITNESS$Generation)
FT_FITNESS$Generation <- gsub("^7_.*", 58, FT_FITNESS$Generation)
FT_FITNESS$Generation <- gsub("^*.*_.*", 0, FT_FITNESS$Generation)

outlier_cutoff = quantile(test$FECUNDITY,0.75, na.rm = TRUE) + (1.5 * IQR(test$FECUNDITY, na.rm = TRUE))
ggplot(FT_FITNESS, aes(x = FECUNDITY)) +
  geom_histogram(bins = 50) +
  geom_vline(xintercept = outlier_cutoff, color = "red")





# add generation column
df3$Genotypes <- str_replace(df3$Genotypes, "-", "_")
#df3$Generation <- str_replace(df3$Genotypes, "(\\d)_\\d+", "\\1")
#df3$Generation <- str_replace(df3$Generation, "(\\d)_\\d+", "\\1")
#str_split_fixed(df3$Genotypes, "_", 3)
#df3[which(df3$Generation > 8), which(colnames(df3) == "Generation")] <- 0
df3$Generation <- 0
df3[grep("^1_", df3$Genotypes), which(colnames(df3)=="Generation")] <- 18
df3[grep("^2_", df3$Genotypes), which(colnames(df3)=="Generation")] <- 28
df3[grep("^3_", df3$Genotypes), which(colnames(df3)=="Generation")] <- 50
df3[grep("^7_", df3$Genotypes), which(colnames(df3)=="Generation")] <- 58

# simplify replicate col to a number
df3$replicate <- gsub("rep (\\d)", "\\1", df3$replicate)




#library(lme4)
#install_packages("lmeTest")
#library(lmeTest)
#x <-aov(lmer(Flowering_Date ~ Condition + (1|Generation:Genotypes) + (1|replicate), df3))
#x <-aov(lmer(Flowering_Date ~ Condition + Generation + (1 + Generation|Genotypes) + (1|replicate)), df3) # try to plot this line!
# Fixed: Condition, Generation
# Random: Genotype, replicate
# relationship between Generation and genotype?
# relationship between Generation and Condition...


#summary(x)
#anova(lmer()) # anova for fixed effects
#summary(aov())
#ranova(lmer()) # for random effects
#t.test(extra ~ group, data = sleep)
